%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 229.000000 203.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.13.4 (Build 17E202) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 138 122
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 138 122
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /m put
dup 34 /e put
dup 35 /t put
dup 36 /h put
dup 37 /o put
dup 38 /d put
dup 39 /space put
dup 40 /v put
dup 41 /r put
dup 42 /i put
dup 43 /question put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<





044E000C0018001900904033980896109916A504A808A610A916B808C808D704E50EE9140C3A08061D18070C1D120B190719191502270F1A1B092715191A1BB80109B321725D182B2B4EF44DED4E10F64DED12392F003F3FED3FED31304379402C001704260B1309260000110226010717092600050D0226010A140C260001100C26000816062601030E0626012B2B2B2B012B2B2B2B2B81005D241235342726232206151416331200111002212200351000330702E085304CBAA59696A3D6011EFCFEF7DDFEFC0112E70674010FA6965E94FCB2ABE403DAFEECFEF4FEFDFEAE012BFC010E014005000100890000029204470011004F40262703260D37034704040E0810020E0911090C270805070006110A081A13012E10291100191213B80145B321627E182B2B4EF43C4DFDE44E10E6003F3F4D3FC4FDC411123939011112393130005D1333153E0133321617152E0123220615112389AB15A46B05181D101B108892B4042FB9369B0203BE0302AF72FD980000010017FFEF0209055A00180052B50D2E0AC00E01B8013F40250416391703060E0A111A17171A0301062900150E150F031F030203FC1619191AFC21677D182B2B4EF44DFD5D39C42F3CFD3C104E456544E6002F3F3F3C4DFD3CED10FDE431301333113315231114171633323637150E012322263511233533A8B6ABAB2615310D1E141F43277E5A9191055AFED593FD4538130B01028E0908816702C59300000001000B000003EA042F00060102402E4201C5010200670068026803670687048805A700A802084700480245044A0586048905C704C80508492873280708B80109B321677E182B2B4B5279B8FF70B40105042004B80183B703036D1202010205B80183401E06066D120000010506040301010502030603000605040A0817171A03AF02BA018400000184B301AF0619194EF4184DFDE0E0FD194E456544E618003F3C3F173C1239011112391239074D2E2B104EE44D072E2B104EE44D2B4B51794025022912030304002912060605010502030603000605040A0817171A020403AF050001AF0619194EF4184DFD3939FD3939194E456544E618003F3C3F173C12390507102B07102B313001715D005D7113090133012301DC011E012BC5FE6CC0FE75042FFC980368FBD1042F0002002F0000044205930007000B00001335211521112311013521152F0413FE4FB2FE50041303A6A8A8FC5A03A60146A7A700000001000000000000D5411B0D5F0F3CF500110800000000005F4D8F0000000000D5670BEEF865FC270B9108F9000000090001000000000000000100000629FE2900000C01F865FCED0B9100010000000000000000000000000000000D05120042023900000473009C04730038047300480473008401C7008406AA00840473003B02AA0089023900170400000B

5A58B020615944B801A6204569447500
00>] def
/CharStrings 13 dict dup begin
/.notdef 0 def
/space 1 def
/question 2 def
/d 3 def
/e 4 def
/h 5 def
/i 6 def
/m 7 def
/o 8 def
/r 9 def
/t 10 def
/v 11 def
/u20B8 12 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4072461 def
currentdict currentfile eexec


401194E9A9A640CC878AC66151AC7D4B6D9C24DFBE581124B55F3C91B00CD043DB4582FEBA153E85FCA1E73D524B4BF95F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
%RBIBeginFontSubset: Helvetica-Bold
%!FontType1-1.0: Helvetica-Bold 1.0000.1.0000
14 dict begin/FontName /Helvetica-Bold def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /A put
dup 34 /B put
dup 35 /C put
dup 36 /D put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -2084 1 index div -985 2 index div 2942 3 index div 2374 5 -1 roll div]cvx def
/sfnts [<






766818B080622020B148454565234520B003266062636820B003266165B045236544B048234420B1504E4565234520B003266062636820B003266165B04E236544B0502344B1004E455458B14E406544B250405045236144592B2B4569534200
00>] def
/CharStrings 6 dict dup begin
/.notdef 0 def
/A 1 def
/B 2 def
/C 3 def
/D 4 def
/u20B8 5 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-2084 -985 2942 2374}def
/UniqueID 4338650 def
currentdict currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA5567765E71F2B911B3C5586B741EEB93F3C73016EC16BFF283758900903D203992EFC8BAFAF13579C602F38C96AC05D8620AE2086072F250ADD3256490B02A185DDD3083C39A0A37A468857C7C69884DA9754EC29DF70DAAA952E313A93CE51C1E2B3FE18B3DE91A0DE38765EDA0530AD04274319E2BF00A7A00DDF0C9681A22C8256EB4814C6249DC8DF713BB5C340A49A24AE58678D71AC04EF4DE89C82F8BD2B54852718455AC90FC9EB701EAAB731A0114F35892CCCF145E874ADDFD735600066499F6A0E4B707F8F0FD40491E9D067341245A15839BEB229CED950E248108A730A33DFAF94A2478BBB4171798B4D72E8C953556A4F75C9A50490DBB31C645E7B6C0E77E9D10BDA90CBFE25462ACE1AF6306123AE0A8E23AFE1A6F4D25D2F5C9F9791B2637321CF012396F516ACB2F0409A08FB7ECEA7990FF18CAAB4F53B78761358DB68967F75F4FA0F5558CA2FDA8E7770C7B60688562862965B95492F04CCFC09C8871BC276DB0E0989BD8E9F17DC906EBE0A5D6ABB272F8D784F54F737C417E506244DE763740E938A352C67E825F46511E12DDD276A6C32A9E40415A5BF95DBE4896F80D6356E83C81539AD8CC9023895031338C900482F7B8CE3CD664583663A935699F3B5463866C127EE7CCF2BD370114C3DB75AA2D94BBC2DF93968CDA627B8DBCDCB8A358E2F79A0FCB68295C7A5412F238CAB23F27D13192C8B5D6619BA58C18ED07C14DD63849F3A1F27EA4CF93FA9C249E05FD501C4F31BE14701AEACC11BF2A5D418DDA9C3EF35DC144B931302D6A382FA0BB8A92E8D25527DCDCB9485B76D4745E44C7
C6BA35982817E1644B76695D2839569B8AA868F419F4725BAE71ED4D49B8EB08DFC81AF19EBA1D914DA2888501782D0618ABB7C5E1FC8B32CD05104BD8CA9DCC59A1CB2141E4717C56796AE7FF18753A4ED0B83D6F456F910C06166829CA61549957C8AD05504DABB2DF75B7D678A556DC40CA1732F1011EC4569FF2C6D63A40C2C400731992617528F492F904172459E6770522D55E7FBF1BF309D9A01CAA0F36DAD9684C8FA742D36DEBD48A543064104B0CDE33DCAB746F7AE0C383D72260F68B642E4A649BB71AB39BF2835342DB17D98DC4A382DA761105F642A73AB8704B3A3A7D15BB5104FB97C66527DB2D83337A643003568D510EB2F33D2001FDB0F0E92CC1A25136A591BAF6486DB2A9140D29D039589C79B0B94067050D0EEA6BEE57576AF9BD1AE501F7BD6BE623DE736694954309B553BD01ACB774B166
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica-Bold cguidfix
/F2.1/Helvetica-Bold renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs2 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs3 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 137.40001 121.8 rc
62 0 0 25 37 93 cm
BI
/Width 186
/Height 75
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!k5Y5Q
Jb>l4Jb=Te!;6-^h>cX;q"fR7V=fE4Jb9$9q"W\Fk5Y5QJb>l4Jb=Te!;6-^h>csDq"a^<pq_NqY.fJ$
M8&f$!5SBWq"NqNn,N1Ypt>GYJ\J;$J\HuTq7m!GpsJm2k5XoMq"a^<pq_NqY.fJ$M8&f$!5SBWq"NqN
n,N1RppKmZJW$[hJW#ACq2YN:poX>\k5XoMq""3fplU,cY)@jhM2V1j!0?oWq!dGGn,N1RppKmZJW$[h
JW#ACq2YN:poX>\k5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiT
k5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOEN
Y(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3F
q![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCI
JUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&
pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^
pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU
!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq""3fplBu_Y).^dM2D%e!0$]Qq!dGGn,N1R
ppKmXJVgOdJVf5?q2><4po=,Yk5XoMq""3fplBu_Y).^dM2D%e!0$]Qq!dGGn,N1WprW<1JYfNGJYe4"
q5=:lpqHOqk5XoMq"OR*po/h@Y,-]GM5C$H!3#\,q"3_Kn,N1WprW<1JYfNGJYe4"q5=:lpqHOqk5XoM
q"+9jpmH\uY*FR'M3[n'!13Jaq!mMHn,N1Sppg*eJX*C'JX)(Wq3M)JpojJ_k5XoMq"+9jpmH\uY*FR'
M3[n'!13Jaq!mMHn,N1QpoaCKJV1+XJV/f3q1es*po!oUk5XoMq!n-^pkaQSY(M:XM1bVZ!/L?Iq![AF
n,N1QpoaCKJV1+XJV/f3q1es*po!oUk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnR
JUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiT
k5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOEN
Y(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3F
q![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCI
JUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&
pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QposONJVC7\JVAr7q1o$,po*uVk5XoMq!n-`
pkjWVY(_F\M1tb]!/UEKq![AFn,N1QposONJVC7\JVAr7q1o$,po*uVk5XoMq"4?upo/hAY,6cIM5L*I
!3#\(q"!SIn,N1Tpqlg*JYoTIJYn:$q5=:lpq$7kk5XoMq"4?upo/hAY,6cIM5L*I!3#\(q"!SIn,N1^
q"0.+V=0!(JaWU-q""4Yk5XoMq#:'\Ja]H(Ja\0Y!:T^Rq#0@Tn,N1^q"0.+V=0!(JaWU-q""4Yk5U#4
JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,Op
~> %APLeod
EI
62 0 0 25 72 47 cm
BI
/Width 186
/Height 75
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!k5Y5U
q"B:1Y4I59Jb/X-q"a(Pk5Y5Uq"B:1Y4I59Jb/X-q"a(Pk5Y5Uq"B:1Y4I59Jb/X-q"a(Pk5Y5LprE0=
J[W%rJ[U-<!4M[6pt,<:n,MPMq"=F&ppYg_\$gjrJ[PQepq$7Pq"aCYk5Y5LprE0=J[W%rJ[U-<!4M[6
pt,<:n,MPMq!\!Wpl'c\[u#ZmJVaA`plP9_q"4%Tk5Y5Fpo4%IJVgjmJVer7!/^K4pq-=nn,MPMq!\!W
pl'c\[u#ZmJVaA`plP9_q"4%Tk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`N
pkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5E
pn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%
!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPM
q!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[
JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedSq"*tS
k5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedRq"*tSk5Y5Epn[\<JUk4[
JUi<%!.aj$ppKngn,MPMq!RpQpk43K[t'$[JUd`NpkedRq"*tSk5Y5Gpo=+LJVppoJVo#9!/gQ7pq-=n
n,MPMq!e'Ypl9o_[u,`oJVjGbplbEaq"4%Tk5Y5Gpo=+LJVppoJVo#9!/gQ7pq-=nn,MPMq"4?spoAtE
\#=kVJZ&RIpojJAq"jIZk5Y5KpqZ[*JZ-&VJZ+-u!3#[rps]$7n,MPMq"4?spoAtE\#=kVJZ&RIpojJA
q"jIZk5Y5GpoF1RJW[F(JWYMG!0R&Cpq?Iqn,MPMq!e'Zplg8k[ul6(JWTqppm:chq"=+Uk5Y5GpoF1R
JW[F(JWYMG!0R&Cpq?Iqn,MPMq!RpQpk=9N[t90_JV!lRpknjTq"*tSk5Y5Epn[\=JV(@_JV&H)!.t!'
ppTthn,MPMq!RpQpk=9N[t90_JV!lRpknjTq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQ
pk43K[t'$[JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`N
pkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5E
pn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%
!.aj$ppTthn,MPMq!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPM
q!RpQpk43K[t'$[JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!RpQpk43K[t'$[
JUd`NpkedSq"*tSk5Y5Epn[\<JUk4[JUi<%!.aj$ppTthn,MPMq!\!TpkXKT[tTBeJV=)Xpl5'Zq"*tS
k5Y5FpnmhBJVCReJVAZ/!/:3-ppp1kn,MPMq!\!TpkXKT[tTBeJV=)Xpl5'Zq"*tSk5Y5Ippu$TY,HoM
JZ&RIpoX>8q"O7Wk5Y5Ippu$TY,HoMJZ&RIpoX>8q"O7Wk5Y5Ippu$TY,HoMJZ&RIpoX>8q"O7Wk5Y5T
q!s")Y4$r1JaWU-q!e(Pq#9a^k5Y5Tq!s")Y4$r1JaWU-q!e(Pq#9a^k5Y5Tq!s")Y4$r1JaWU-q!e(P
q#9a^JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!
J,
~> %APLeod
EI
62 0 0 25 3 47 cm
BI
/Width 186
/Height 75
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!k5Y5U
q"B:1Y4I59Jb/X-q"X"Ok5Y5Uq"B:1Y4I59Jb/X-q"X"Ok5Y5Uq"B:1Y4I59Jb/X-q"X"Ok5Y5MprW<@
J[W%rJ[U-<!4M[5psJm3n,MPMq"FL)ppbm`\$gjrJ[PQeppp1Iq"X=Xk5Y5MprW<@J[W%rJ[U-<!4M[5
psJm3n,MPMq!e'Zpl'c\[u#ZmJVaA`pl>-Uq"!nRk5Y5GpoF1KJVgjmJVer7!/^K2pp9bdn,MPMq!e'Z
pl'c\[u#ZmJVaA`pl>-Uq"!nRk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`N
pkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5F
pnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%
!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPM
q!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[
JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQ
k5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXHq!mhQk5Y5Fpnmh?JUk4[
JUi<%!.aj"poX>]n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXHq!mhQk5Y5GpoX=OJVppoJVo#9!/gQ5pp9bd
n,MPMq!e'\pl9o_[u,`oJVjGbplP9Wq"!nRk5Y5GpoX=OJVppoJVo#9!/gQ5pp9bdn,MPMq"=F"poAtE
\#=kVJZ&RIpoaD9q"O7Wk5Y5Lpqum-JZ-&VJZ+-u!3#[qprrO-n,MPMq"=F"poAtE\#=kVJZ&RIpoaD9
q"O7Wk5Y5HpoX=UJW[F(JWYMG!0R&AppKngn,MPMq!n-]plp>l[ul6(JWTqppm(W^q"*tSk5Y5HpoX=U
JW[F(JWYMG!0R&AppKngn,MPMq!\!TpkF?O[t90_JV!lRpk\^Jq!mhQk5Y5Fpnmh@JV(@_JV&H)!.t!%
poaD^n,MPMq!\!TpkF?O[t90_JV!lRpk\^Jq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!T
pk=9L[t'$[JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`N
pkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5F
pnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%
!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPM
q!\!Tpk=9L[t'$[JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!Tpk=9L[t'$[
JUd`NpkSXIq!mhQk5Y5Fpnmh?JUk4[JUi<%!.aj"poaD^n,MPMq!\!VpkaQU[tTBeJV=)Xpl"pOq!mhQ
k5Y5Fpo*tEJVCReJVAZ/!/:3+posP`n,MPMq!\!VpkaQU[tTBeJV=)Xpl"pOq!mhQk5Y5Jpq?I%JZ-&V
JZ+-u!3#[npr3%$n,MPMq"+9opo/hC\#=kVJZ&RIpoF2/q"=+Uk5Y5Jpq?I%JZ-&VJZ+-u!3#[npr3%$
n,MPMq#1!ZJa]c1Ja\0Y!:T^Pq"=F]n,MPMq#1!ZJa]c1Ja\0Y!:T^Pq"=F]n,MPMq#1!ZJa]c1Ja\0Y
!:T^Pq"=F]n,It=JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$
JcC<$e,Op
~> %APLeod
EI
62 0 0 25 37 1 cm
BI
/Width 186
/Height 75
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/DataSource cg_aiproc
ID
JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!n,N1^
q"B:/V=B-,Jaia1q"4@\k5XoMq#:'^JaoT,Jan<]!:fjVq#9FUn,N1^q"B:/V=B-,Jaia1q"4@\k5XoM
q"FL+pp#CQY-*>YM6?ZY!3l78q"3_Kn,N1VpriH;JZc/YJZaj4q60k'pqlguk5XoMq"FL+pp#CQY-*>Y
M6?ZY!3l78q"3_Kn,N1Rpp0[RJVUC`JVT);q2562po4&Xk5XoMq""3cpl'cZY(qR`M21nb!/pWOq!dGG
n,N1Rpp0[RJVUC`JVT);q2562po4&Xk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnR
JUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiT
k5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOEN
Y(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3F
q![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCI
JUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&
pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoX=HJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-]
pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoX=HJUjnRJUiT-q1Sg&pnmiTk5XoMq""3dplU,eY)S!lM2h=m
!0HuWq!dGGn,N1Rpp9aXJW6glJW5MGq2bT<poO8[k5XoMq""3dplU,eY)S!lM2h=m!0HuWq!dGGn,N1Y
psJlAJZGrSJZFX.q60k'prN7)k5XoMq"a^4pp#CNY,d,SM6$HV!3l7>q"NqNn,N1YpsJlAJZGrSJZFX.
q60k'prN7)k5XoMq""3dpl^2fY)S!lM2h=m!0HuVq!dGGn,N1Rpp9aYJW6glJW5MGq2bT<poF2Zk5XoM
q""3dpl^2fY)S!lM2h=m!0HuVq!dGGn,N1QpoX=HJUjnRJUiT-q1Sg&pndcSk5XoMq!n-]pkOENY(2(R
M1GDU!/:3Eq![AFn,N1QpoX=HJUjnRJUiT-q1Sg&pndcSk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AF
n,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnR
JUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiT
k5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOEN
Y(2(RM1GDU!/:3Fq![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3F
q![AFn,N1QpoaCIJUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1QpoaCI
JUjnRJUiT-q1Sg&pnmiTk5XoMq!n-^pkOENY(2(RM1GDU!/:3Fq![AFn,N1Rpp0[RJVUC`JVT);q2562
po4&Wk5XoMq""3cpl'cZY(qR`M21nb!/pWOq![AFn,N1Rpp0[RJVUC`JVT);q2562po4&Wk5XoMq"FL+
pp#CQY-*>YM6?ZY!3l78q"3_Kn,N1VpriH;JZc/YJZaj4q60k'pqlguk5XoMq"FL+pp#CQY-*>YM6?ZY
!3l78q"3_Kn,N1^q"B:/V=B-,Jaia1q"4@\k5XoMq#:'^JaoT,Jan<]!:fjVq#9FUn,N1^q"B:/V=B-,
Jaia1q"4@\k5U#4JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$JcC<$e,P"!JcC<$JcF4!JcC<$
JcC<$e,Op
~> %APLeod
EI
1 J
1 j
0.60000002 i
/Cs2 SC
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
255.5728 431 m
227.5139 393.32697 l
S
0 J
0 j
0 i
220.34598 383.703 m
221.89992 397.50827 l
233.12788 389.14566 l
h
220.34598 383.703 m
S
1 J
1 j
0.60000002 i
276.88901 431 m
306.32339 393.15622 l
S
0 J
0 j
0 i
313.69073 383.68402 m
300.79794 388.85858 l
311.84885 397.45383 l
h
313.69073 383.68402 m
S
1 1 1 sc
CM
40.800003 106.8 m
94.800003 106.8 l
94.800003 98.400002 l
40.800003 98.400002 l
h
40.800003 106.8 m
f
1 J
1 j
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
221 292 m
311 292 l
311 306 l
221 306 l
h
221 292 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 67.800003 102.60001 cm
/F1.1[ 12 0 0 -12 0 0]sf
-26.677734 4 m
(!"#$%&'!)[ 9.996094 6.673828 3.333984 6.673828 6.673828 6.673828 3.333984 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
40.800003 115.2 m
94.800003 115.2 l
94.800003 106.8 l
40.800003 106.8 l
h
40.800003 115.2 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
221 278 m
311 278 l
311 292 l
221 292 l
h
221 278 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 67.800003 111.00001 cm
/F2.1[ 12 0 0 -12 0 0]sf
-4.3330078 4 m
(!)s
/Cs2 SC
1 1 1 sc
CM
6.6000004 60.900002 m
60.600002 60.900002 l
60.600002 52.500004 l
6.6000004 52.500004 l
h
6.6000004 60.900002 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
164 368.5 m
254 368.5 l
254 382.5 l
164 382.5 l
h
164 368.5 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 33.600002 56.700001 cm
/F1.1[ 12 0 0 -12 0 0]sf
-28.341797 4 m
(%\("\)\)*&"'!)[ 6.673828 6.000000 6.673828 3.996094 3.996094 2.666016 6.673828 6.673828 3.333984 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
6.6000004 69.300003 m
60.600002 69.300003 l
60.600002 60.900002 l
6.6000004 60.900002 l
h
6.6000004 69.300003 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
164 354.5 m
254 354.5 l
254 368.5 l
164 368.5 l
h
164 354.5 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 33.600002 65.100006 cm
/F2.1[ 12 0 0 -12 0 0]sf
-4.3330078 4 m
(")s
/Cs2 SC
1 1 1 sc
CM
76.5 60.900002 m
130.5 60.900002 l
130.5 52.500004 l
76.5 52.500004 l
h
76.5 60.900002 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
280.5 368.5 m
370.5 368.5 l
370.5 382.5 l
280.5 382.5 l
h
280.5 368.5 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 103.50001 56.700001 cm
/F1.1[ 12 0 0 -12 0 0]sf
-28.341797 4 m
(%\("\)\)*&"'!)[ 6.673828 6.000000 6.673828 3.996094 3.996094 2.666016 6.673828 6.673828 3.333984 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
76.5 69.300003 m
130.5 69.300003 l
130.5 60.900002 l
76.5 60.900002 l
h
76.5 69.300003 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
280.5 354.5 m
370.5 354.5 l
370.5 368.5 l
280.5 368.5 l
h
280.5 354.5 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 103.50001 65.100006 cm
/F2.1[ 12 0 0 -12 0 0]sf
-4.3330078 4 m
(#)s
/Cs2 SC
1 1 1 sc
CM
40.800003 15.000001 m
94.800003 15.000001 l
94.800003 6.6000004 l
40.800003 6.6000004 l
h
40.800003 15.000001 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
221 445 m
311 445 l
311 459 l
221 459 l
h
221 445 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 67.800003 10.8 cm
/F1.1[ 12 0 0 -12 0 0]sf
-8.3349609 4 m
(!+)[ 9.996094 0.000000 ] xS
/Cs2 SC
1 1 1 sc
CM
40.800003 23.400002 m
94.800003 23.400002 l
94.800003 15.000001 l
40.800003 15.000001 l
h
40.800003 23.400002 m
f
0.60000002 i
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
221 431 m
311 431 l
311 445 l
221 445 l
h
221 431 m
S
/Cs3 SC
0 sc
0 i
0.60000002 0 0 -0.60000002 67.800003 19.200001 cm
/F2.1[ 12 0 0 -12 0 0]sf
-4.3330078 4 m
($)s
0.60000002 i
/Cs2 SC
0 0 0 sc
0.60000002 0 0 -0.60000002 -91.800003 282 cm
219.43224 354.5 m
247.50607 316.8251 l
S
0 J
0 j
0 i
254.67624 307.20279 m
241.89307 312.64252 l
253.11909 321.00769 l
h
254.67624 307.20279 m
S
1 J
1 j
0.60000002 i
314.60794 354.5 m
285.16449 316.65509 l
S
0 J
0 j
0 i
277.79587 307.1839 m
279.63965 320.95346 l
290.68936 312.35672 l
h
277.79587 307.1839 m
S
ep
end
%%Trailer
%%EOF
